// C:\Users\SOHAM\Desktop\crawler\test-crawler\src\functions\ingestion\interfaces.ts

import { GSStatus, GSContext } from '@godspeedsystems/core';
import { EventEmitter } from 'events';

// --- Ingestion Data Structures ---
export interface IngestionData {
    id: string; // Unique identifier for the data item
    content: string | Buffer | object;
    metadata?: { // Optional metadata associated with the data
        [key: string]: any;
        filename?: string; // e.g., original filename
        relativePath?: string; // e.g., path within a source system
    };
    fetchedAt?: Date;
    url?: string;     // Added for HTTP Crawler output
    statusCode?: number; // Added for HTTP Crawler output
    [key: string]: any; // Allows for additional arbitrary properties
}




// --- Plugin Interfaces ---

export interface GSDataSource {
    execute(ctx: GSContext, initialPayload?: any): Promise<GSStatus>;
    initClient(): Promise<any>;
}

export interface IDestinationPlugin {
    init(config: any): Promise<void>; // Initialize with destination-specific config
    processData(data: IngestionData[]): Promise<GSStatus>; // Process a batch of ingested data
}


// --- Task Definition Interfaces ---

export type TriggerType = 'cron' | 'webhook' | 'manual';

export interface BaseTrigger {
    type: TriggerType;
    enabled?: boolean;
}

export interface CronTrigger extends BaseTrigger {
    type: 'cron';
    expression: string; // Cron expression, e.g., "0 0 * * *"
}

export interface WebhookTrigger extends BaseTrigger {
    type: 'webhook';
    credentials: any; // Credentials for source/destination (e.g., API keys, service account JSON)
    callbackurl:string
    endpointId: string; // A unique ID for the webhook endpoint (e.g., '/webhook/gdrive')
    secret?: string; // Secret used for webhook validation (generated by manager, stored in DB)
    externalWebhookId?: string; // ID returned by the external service (e.g., GitHub hook ID, GDrive channel ID)
}

export interface ManualTrigger extends BaseTrigger {
    type: 'manual';
    // No specific properties needed for manual trigger other than 'type'
}

export type IngestionTrigger = CronTrigger | WebhookTrigger | ManualTrigger;

export enum IngestionTaskStatus {
    SCHEDULED = 'SCHEDULED',
    RUNNING = 'RUNNING',
    COMPLETED = 'COMPLETED',
    FAILED = 'FAILED',
    DISABLED = 'DISABLED',
}

export interface IngestionTaskDefinition {
    id: string; // Unique ID for the ingestion task (UUID)
    name: string; // Human-readable name
    description?: string;
    enabled: boolean; // Whether the task is active or not
    trigger: IngestionTrigger;
    source: {
        pluginType: string; // e.g., 's3', 'gdrive-crawler', 'git'
        config: any; // Source-specific configuration
    };
    destination?: { // Destination is optional (e.g., if only transforming data)
        pluginType: string; // e.g., 'filesystem', 'database', 'sftp'
        config: any; // Destination-specific configuration
    };
    // Optional additional properties for task management
    currentStatus?: IngestionTaskStatus;
    lastRun?: Date;
    lastRunStatus?: GSStatus;
    nextRun?: Date; // For cron jobs, calculated next run time
    // Any custom parameters or configurations for the transformer function itself
    transformerParams?: any;

    // Crawler-specific tokens/state that need to be persisted with the task
    startPageToken?: string; // For Google Drive delta syncs
    nextPageToken?: string; // For resumable full scans
    otherCrawlerSpecificTokens?: any; // Flexible field for other crawler-specific state
}

// --- Webhook Registry Entry for Database ---
export interface WebhookRegistryEntry {
    sourceIdentifier: string; // Unique key for the source (e.g., repoUrl, folderId, meetingId)
    endpointId: string; // The local endpoint ID (e.g., '/webhook/gdrive')
    secret: string; // The secret generated by your system for validation
    externalWebhookId: string; // The ID returned by the external service (e.g., GitHub hook ID, GDrive channel ID)
    registeredTasks: string[]; // Array of task IDs using this webhook (for shared webhooks)
    webhookFlag: boolean; // Indicates if an external webhook is currently active for this source

    // Crawler-specific tokens/state that are tied to the webhook registration
    startPageToken?: string; // For Google Drive delta syncs
    nextPageToken?: string; // For resumable full scans
    otherCrawlerSpecificTokens?: any; // Flexible field for other crawler-specific state
}
export interface ProcessedWebhookResult {
    isValid: boolean;
    payload?: any; // The parsed payload from the webhook body
    externalResourceId?: string; // Added: The specific resource ID from the webhook (e.g., repo URL, folder ID)
    changeType?: 'UPSERT' | 'DELETE' | 'UNKNOWN'; // Added: The type of change detected
    error?: string; // Error message if validation fails
}

